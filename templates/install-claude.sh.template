#!/bin/bash
# Claude Desktop installation script for sandboxed environment
set -e

# Display some debug info
echo "==== Installation Debug Info ===="
echo "User: $(whoami)"
echo "Home: $HOME"
echo "Working directory: $(pwd)"
echo "Display: ${DISPLAY:-not set}"
echo "Wayland display: ${WAYLAND_DISPLAY:-not set}"
echo "=============================="

# Simple Wayland detection
if [ -n "${WAYLAND_DISPLAY:-}" ]; then
    echo "Detected Wayland session, setting Electron variables"
    export ELECTRON_OZONE_PLATFORM_HINT="auto"
fi

# Check if the package exists
if [ ! -f "$HOME/Downloads/{package_filename}" ]; then
    echo "ERROR: Package file not found at $HOME/Downloads/{package_filename}"
    ls -la "$HOME/Downloads"
    exit 1
fi

# Create temp directory for extraction
echo "Creating temporary extraction directory..."
mkdir -p "$HOME/temp-extract"
cd "$HOME/temp-extract"

# Extract the .deb package
echo "Extracting .deb package..."
if command -v dpkg-deb &> /dev/null; then
    echo "Using dpkg-deb for extraction"
    dpkg-deb -x "$HOME/Downloads/{package_filename}" .
elif command -v ar &> /dev/null; then
    echo "Using ar and tar for extraction"
    ar x "$HOME/Downloads/{package_filename}"
    
    # Find and extract the data archive
    if [ -f "data.tar.xz" ]; then
        echo "Extracting data.tar.xz"
        tar -xf data.tar.xz
    elif [ -f "data.tar.gz" ]; then
        echo "Extracting data.tar.gz"
        tar -xf data.tar.gz
    elif [ -f "data.tar.zst" ] && command -v unzstd &> /dev/null; then
        echo "Extracting data.tar.zst"
        tar --use-compress-program=unzstd -xf data.tar.zst
    elif [ -f "data.tar" ]; then
        echo "Extracting data.tar"
        tar -xf data.tar
    else
        echo "ERROR: Couldn't find a suitable data archive to extract"
        ls -la
        exit 1
    fi
else
    echo "ERROR: Neither dpkg-deb nor ar found. Cannot extract package."
    exit 1
fi

# Check if extraction was successful
echo "Checking extraction results..."
if [ ! -d "usr" ]; then
    echo "ERROR: Extraction failed - usr directory not found"
    ls -la
    exit 1
fi

# Show extracted content
echo "Extracted package contents:"
find . -name "claude-desktop" -o -name "app.asar"

# Create necessary directories
echo "Setting up application directories..."
mkdir -p "$HOME/.local/bin"
mkdir -p "$HOME/.local/share/applications"
mkdir -p "$HOME/.local/share/claude-desktop"

# Install executable
if [ -f "usr/bin/claude-desktop" ]; then
    echo "Installing claude-desktop executable..."
    cp "usr/bin/claude-desktop" "$HOME/.local/bin/"
    chmod +x "$HOME/.local/bin/claude-desktop"
else
    echo "Creating fallback executable..."
    cat > "$HOME/.local/bin/claude-desktop" << 'EXECEOF'
#!/bin/bash
# Fallback launcher for Claude Desktop
exec electron --no-sandbox --disable-dev-shm-usage --js-flags="--expose-gc" "$HOME/.local/share/claude-desktop/app.asar" "$@"
EXECEOF
    chmod +x "$HOME/.local/bin/claude-desktop"
fi

# Copy app resources
if [ -d "usr/lib/claude-desktop" ]; then
    echo "Copying application resources..."
    cp -r usr/lib/claude-desktop/* "$HOME/.local/share/claude-desktop/"
fi

# Copy desktop entries and icons if available
if [ -d "usr/share/applications" ]; then
    cp -r usr/share/applications/* "$HOME/.local/share/applications/"
fi

if [ -d "usr/share/claude-desktop" ]; then
    cp -r usr/share/claude-desktop/* "$HOME/.local/share/claude-desktop/"
fi

if [ -d "usr/share/icons" ]; then
    mkdir -p "$HOME/.local/share/icons"
    cp -r usr/share/icons/* "$HOME/.local/share/icons/"
fi

# Create desktop entry with basic Wayland support
echo "Creating desktop entry for instance '{instance_name}'..."
cat > "$HOME/.local/share/applications/claude-desktop-{instance_name}.desktop" << EOF2
[Desktop Entry]
Name=Claude Desktop ({instance_name})
Comment=Claude Desktop AI Assistant ({instance_name} instance)
Exec=env CLAUDE_INSTANCE={instance_name} LIBVA_DRIVER_NAME=dummy ELECTRON_OZONE_PLATFORM_HINT=auto "$HOME/.local/bin/claude-desktop" --disable-gpu --no-sandbox --disable-dev-shm-usage --js-flags="--expose-gc" --preload="$HOME/.config/claude-desktop/preload.js" %u
Icon=claude-desktop
Type=Application
Terminal=false
Categories=Office;Utility;Network;
MimeType=x-scheme-handler/claude;
StartupWMClass=Claude-{instance_name}
EOF2

# Cleanup
echo "Cleaning up..."
cd "$HOME"
rm -rf "$HOME/temp-extract"

# Verify installation
if [ -x "$HOME/.local/bin/claude-desktop" ]; then
    echo "✅ Claude Desktop installation complete!"
    echo "Executable: $HOME/.local/bin/claude-desktop"
    
    if [ -f "$HOME/.local/share/claude-desktop/app.asar" ]; then
        echo "✅ App resources installed: $HOME/.local/share/claude-desktop/app.asar"
    else
        echo "⚠️ Warning: app.asar not found"
    fi
    
    echo "Desktop entry created: $HOME/.local/share/applications/claude-desktop-{instance_name}.desktop"
    
    exit 0
else
    echo "❌ Installation failed: Executable not found at $HOME/.local/bin/claude-desktop"
    exit 1
fi